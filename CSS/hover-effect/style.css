html,body {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  font-family: "Black han sans", sans-serif;
  background-color: #2f2f2f;
  font-size: 2rem;
}

span {
  cursor: pointer;
  -webkit-text-stroke: 1px #f9f7f1;
  background-image: linear-gradient(0deg, #f9f7f1, #f9f7f1);
  -webkit-background-clip: text; 
  color: transparent;
  background-repeat: no-repeat;
  transition: background-size 0.5s ease-in;
}

/* 

효과에 대한 설명

말로 설명하자면 우선 -webkit-text-stroke를 통해서 글자 태두리에 흰색 효과를 줍니다.

그 다음  -webkit-background-clip 으로 글자만큼 백그라운드를 땁니다. 

이걸 안 하면 글자속을 천천히 채우는 것이 아니라 네모가 점점 글자를 잠식해갑니다.

그 다음 글자 자체를 투명하게 합니다.

*/

span:hover {
  background-size: 100% 100%;
}

.left {
  background-position: 0% 100%;
  background-size: 0% 100%;
}

.right {
  background-position: 100% 0%;
  background-size: 0% 100%;
}

.top {
  background-position: 0% 0%;
  background-size: 100% 0%;
}

.bottom {
  background-position: 0% 100%;
  background-size: 100% 0%;
}

.center {
  background-position: 50% 50%;
  background-size: 0% 0%;
}


/* 

호버했을 때 백그라운드 사이즈를 완벽하게 채우게 하고 트랜지션 속도를 줍니다.

background-position은 각각 x축 y축을 나타냅니다. 

즉 현재 백그라운드가 어디에 위치하는지 자리를 잡는 것입니다.

그 다음 이 백그라운드 사이즈는 x축 y축만큼의 크기를 정하는 것입니다.

어떤 것은 100% 0, 0 100% 되어있는데 높이나 가로가 비록 부모의 100 퍼센트이더라도 

가로나 세로가 0이기 때문에 전혀 보이지 않게 됩니다.


.left {
  background-position: 0% 0%;
  background-size: 0% 100%;
}

.right {
  background-position: 100% 0%;
  background-size: 0% 100%;
}

위에 두 포지션을 주목해서 봐야 합니다.

background-position: 0% 0%; 이건 위쪽 왼쪽 구석 끝

background-position: 100% 0%; 이건 아래 오른쪽 구석 끝에 있습니다.

이렇게 포지션을 정확히 잡아주고 사이즈를 정해줘야 효과가 제대로 발동됩니다.

.center {
  background-position: 50% 50%;
  background-size: 0% 0%;
}

그리고 이거에 대해서도 잘 봐두면 좋은데 한 가운데에 포지션을 잡아두고 사이즈를 0으로 잡은 것입니다.

이 효과를 잘 이용하면 안에서 밖으로 터져나오는 효과를 연출할 수도 있습니다.


*/
